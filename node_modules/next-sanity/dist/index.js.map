{"version":3,"file":"index.js","sources":["../src/client.ts","../src/aborter.ts","../src/currentUser.ts","../src/useSubscription.ts"],"sourcesContent":["import type {ClientConfig, SanityClient} from '@sanity/client'\nimport sanityClient from '@sanity/client'\n\n/** @public */\nexport function createClient(config: ClientConfig): SanityClient {\n  return sanityClient(config)\n}\n","/** @public */\nexport interface Aborter {\n  abort(): void\n  signal: AbortSignal\n}\n\nclass MockAbortController {\n  _signal = {aborted: false}\n  get signal() {\n    return this._signal as AbortSignal\n  }\n  abort() {\n    this._signal.aborted = true\n  }\n}\n\n/** @internal */\nexport function getAborter(): Aborter {\n  return typeof AbortController === 'undefined'\n    ? new MockAbortController()\n    : new AbortController()\n}\n","import {useEffect, useState} from 'react'\n\nimport {Aborter, getAborter} from './aborter'\nimport {CurrentUser} from './types'\n\n/** @public */\nexport function createCurrentUserHook({projectId}: {projectId: string; dataset?: string}) {\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  return () => useCurrentUser(projectId)\n}\n\n/** @internal */\nexport function getCurrentUser(\n  projectId: string,\n  abort: Aborter,\n  token?: string\n): Promise<CurrentUser | null> {\n  const headers = token ? {Authorization: `Bearer ${token}`} : undefined\n  return fetch(`https://${projectId}.api.sanity.io/v1/users/me`, {\n    credentials: 'include',\n    signal: abort.signal,\n    headers,\n  })\n    .then((res) => res.json())\n    .then((res) => (res?.id ? res : null))\n}\n\nfunction useCurrentUser(projectId: string) {\n  const [data, setUser] = useState<CurrentUser | null>()\n  const [error, setError] = useState<Error>()\n\n  useEffect(() => {\n    const aborter = getAborter()\n    getCurrentUser(projectId, aborter)\n      .then(setUser)\n      .catch((err: Error) => err.name !== 'AbortError' && setError(err))\n\n    return () => {\n      aborter.abort()\n    }\n  }, [projectId])\n\n  return {data, error, loading: data !== null || !error}\n}\n","import {GroqStore, Subscription} from '@sanity/groq-store'\nimport {useEffect, useMemo, useState} from 'react'\n\nimport {Aborter, getAborter} from './aborter'\nimport {getCurrentUser} from './currentUser'\nimport {Params, ProjectConfig, SubscriptionOptions} from './types'\n\nconst EMPTY_PARAMS = {}\n\n/** @public */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function createPreviewSubscriptionHook({\n  projectId,\n  dataset,\n  token,\n  EventSource,\n  documentLimit = 3000,\n  includeTypes,\n}: ProjectConfig & {documentLimit?: number; includeTypes?: string[]}) {\n  // Only construct/setup the store when `getStore()` is called\n  let store: Promise<GroqStore>\n\n  return function usePreviewSubscription<R = any>(\n    query: string,\n    options: SubscriptionOptions<R> = {}\n  ) {\n    const {params = EMPTY_PARAMS, initialData, enabled} = options\n    return useQuerySubscription<R>({\n      getStore,\n      projectId,\n      query,\n      params,\n      initialData: initialData as any,\n      enabled: enabled ? typeof window !== 'undefined' : false,\n      token,\n    })\n  }\n\n  function getStore(abort: Aborter) {\n    if (!store) {\n      store = import('@sanity/groq-store').then(({groqStore}) => {\n        // Skip creating the groq store if we've been unmounted to save memory and reduce gc pressure\n        if (abort.signal.aborted) {\n          const error = new Error('Cancelling groq store creation')\n          // This ensures we can skip it in the catch block same way\n          error.name = 'AbortError'\n          return Promise.reject(error)\n        }\n\n        return groqStore({\n          projectId,\n          dataset,\n          documentLimit,\n          includeTypes,\n          token,\n          EventSource,\n          listen: true,\n          overlayDrafts: true,\n          subscriptionThrottleMs: 10,\n        })\n      })\n    }\n    return store\n  }\n}\n\nfunction useQuerySubscription<R = any>(options: {\n  getStore: (abort: Aborter) => Promise<GroqStore>\n  projectId: string\n  query: string\n  params: Params\n  initialData: R\n  enabled: boolean\n  token?: string\n}) {\n  const {getStore, projectId, query, initialData, enabled = false, token} = options\n  const [error, setError] = useState<Error>()\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState<R>()\n  const params = useParams(options.params)\n\n  // Use \"deep\" dependency comparison because params are often not _referentially_ equal,\n  // but contains the same shallow properties, eg `{\"slug\": \"some-slug\"}`\n  useEffect(() => {\n    if (!enabled) {\n      return\n    }\n\n    setLoading(true)\n\n    const aborter = getAborter()\n    let subscription: Subscription | undefined\n    getCurrentUser(projectId, aborter, token)\n      .then((user) => {\n        if (user) {\n          return\n        }\n\n        // eslint-disable-next-line no-console\n        console.warn('Not authenticated - preview not available')\n        throw new Error('Not authenticated - preview not available')\n      })\n      .then(() => getStore(aborter))\n      .then((store) => {\n        subscription = store.subscribe(query, params, (err, result) => {\n          if (err) {\n            setError(err)\n          } else {\n            setData(result)\n          }\n        })\n      })\n      .catch((err: Error) => (err.name === 'AbortError' ? null : setError(err)))\n      .finally(() => setLoading(false))\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      if (subscription) {\n        subscription.unsubscribe()\n      }\n\n      aborter.abort()\n    }\n  }, [getStore, query, params, enabled, projectId, token])\n\n  return {\n    data: typeof data === 'undefined' ? initialData : data,\n    loading,\n    error,\n  }\n}\n\n// Return params that are stable with deep equal as long as the key order is the same\nexport function useParams(params: Params): Params {\n  const stringifiedParams = useMemo(() => JSON.stringify(params), [params])\n  return useMemo(() => JSON.parse(stringifiedParams), [stringifiedParams])\n}\n"],"names":["createClient","config","sanityClient","MockAbortController","constructor","_signal","aborted","signal","abort","getAborter","AbortController","createCurrentUserHook","projectId","useCurrentUser","getCurrentUser","token","headers","Authorization","fetch","credentials","then","res","json","id","data","setUser","useState","error","setError","useEffect","aborter","catch","err","name","loading","EMPTY_PARAMS","createPreviewSubscriptionHook","dataset","EventSource","documentLimit","includeTypes","store","usePreviewSubscription","query","options","params","initialData","enabled","useQuerySubscription","getStore","window","groqStore","Error","Promise","reject","listen","overlayDrafts","subscriptionThrottleMs","setLoading","setData","useParams","subscription","user","console","warn","subscribe","result","finally","unsubscribe","stringifiedParams","useMemo","JSON","stringify","parse"],"mappings":";;;AAIO,SAASA,aAAaC,MAAoC,EAAA;EAC/D,OAAOC,aAAaD,MAAM,CAAA;AAC5B;ACAA,MAAME,mBAAoB,CAAA;EAA1BC,WAAA,GAAA;IACY,IAAA,CAAAC,OAAA,GAAA;MAACC,SAAS;IAAK,CAAA;EAAA;EACzB,IAAIC,MAAS,GAAA;IACX,OAAO,IAAK,CAAAF,OAAA;EACd;EACAG,KAAQ,GAAA;IACN,IAAA,CAAKH,QAAQC,OAAU,GAAA,IAAA;EACzB;AACF;AAGO,SAASG,UAAsB,GAAA;EACpC,OAAO,OAAOC,eAAoB,KAAA,WAAA,GAC9B,IAAIP,mBAAoB,EAAA,GACxB,IAAIO,eAAgB,EAAA;AAC1B;ACfgB,SAAAC,qBAAA,OAA0E;EAAA,IAApD;IAACC;GAAmD;EAEjF,OAAA,MAAMC,eAAeD,SAAS,CAAA;AACvC;AAGgB,SAAAE,cAAA,CACdF,SACA,EAAAJ,KAAA,EACAO,KAC6B,EAAA;EAC7B,MAAMC,UAAUD,KAAQ,GAAA;IAACE,aAAe,mBAAUF;GAAW,GAAA,KAAA,CAAA;EACtD,OAAAG,KAAA,mBAAiBN,SAAuC,iCAAA;IAC7DO,WAAa,EAAA,SAAA;IACbZ,QAAQC,KAAM,CAAAD,MAAA;IACdS;EAAA,CACD,CAAA,CACEI,IAAK,CAACC,OAAQA,GAAI,CAAAC,IAAA,EAAM,CAAA,CACxBF,KAAMC,GAAA,IAAA,CAASA,GAAK,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,GAAA,CAAAE,EAAA,IAAKF,MAAM,IAAK,CAAA;AACzC;AAEA,SAASR,eAAeD,SAAmB,EAAA;EACzC,MAAM,CAACY,IAAA,EAAMC,OAAO,CAAA,GAAIC,QAA6B,EAAA;EACrD,MAAM,CAACC,KAAA,EAAOC,QAAQ,CAAA,GAAIF,QAAgB,EAAA;EAE1CG,SAAA,CAAU,MAAM;IACd,MAAMC,UAAUrB,UAAW,EAAA;IAC3BK,cAAA,CAAeF,SAAW,EAAAkB,OAAO,CAC9B,CAAAV,IAAA,CAAKK,OAAO,CACZ,CAAAM,KAAA,CAAOC,GAAA,IAAeA,GAAI,CAAAC,IAAA,KAAS,YAAgB,IAAAL,QAAA,CAASI,GAAG,CAAC,CAAA;IAEnE,OAAO,MAAM;MACXF,OAAA,CAAQtB,KAAM,EAAA;IAAA,CAChB;EAAA,CACF,EAAG,CAACI,SAAS,CAAC,CAAA;EAEd,OAAO;IAACY,IAAM;IAAAG,KAAA;IAAOO,SAASV,IAAS,KAAA,IAAA,IAAQ,CAACG;GAAK;AACvD;ACpCA,MAAMQ,eAAe,CAAA,CAAC;AAIf,SAASC,6BAA8B,QAOwB;EAAA,IAPxB;IAC5CxB,SAAA;IACAyB,OAAA;IACAtB,KAAA;IACAuB,WAAA;IACAC,aAAgB,GAAA,GAAA;IAChBC;EACF,CAAsE;EAEhE,IAAAC,KAAA;EAEJ,OAAO,SAASC,sBAAA,CACdC,KACA,EACA;IAAA,IADAC,OAAA,uEAAkC,CAAA,CAClC;IACA,MAAM;MAACC,MAAA,GAASV,YAAc;MAAAW,WAAA;MAAaC;KAAW,GAAAH,OAAA;IACtD,OAAOI,oBAAwB,CAAA;MAC7BC,QAAA;MACArC,SAAA;MACA+B,KAAA;MACAE,MAAA;MACAC,WAAA;MACAC,OAAS,EAAAA,OAAA,GAAU,OAAOG,MAAA,KAAW,WAAc,GAAA,KAAA;MACnDnC;IAAA,CACD,CAAA;EAAA,CACH;EAEA,SAASkC,SAASzC,KAAgB,EAAA;IAChC,IAAI,CAACiC,KAAO,EAAA;MACVA,KAAA,GAAQ,MAAO,CAAA,oBAAsB,CAAA,CAAArB,IAAA,CAAK,SAAiB;QAAA,IAAhB;UAAC+B;SAAe;QAErD,IAAA3C,KAAA,CAAMD,OAAOD,OAAS,EAAA;UAClB,MAAAqB,KAAA,GAAQ,IAAIyB,KAAA,CAAM,gCAAgC,CAAA;UAExDzB,KAAA,CAAMM,IAAO,GAAA,YAAA;UACN,OAAAoB,OAAA,CAAQC,OAAO3B,KAAK,CAAA;QAC7B;QAEA,OAAOwB,SAAU,CAAA;UACfvC,SAAA;UACAyB,OAAA;UACAE,aAAA;UACAC,YAAA;UACAzB,KAAA;UACAuB,WAAA;UACAiB,MAAQ,EAAA,IAAA;UACRC,aAAe,EAAA,IAAA;UACfC,sBAAwB,EAAA;QAAA,CACzB,CAAA;MAAA,CACF,CAAA;IACH;IACO,OAAAhB,KAAA;EACT;AACF;AAEA,SAASO,qBAA8BJ,OAQpC,EAAA;EACK,MAAA;IAACK;IAAUrC,SAAW;IAAA+B,KAAA;IAAOG;IAAaC,OAAU,GAAA,KAAA;IAAOhC;EAAS,CAAA,GAAA6B,OAAA;EAC1E,MAAM,CAACjB,KAAA,EAAOC,QAAQ,CAAA,GAAIF,QAAgB,EAAA;EAC1C,MAAM,CAACQ,OAAA,EAASwB,UAAU,CAAA,GAAIhC,SAAS,KAAK,CAAA;EAC5C,MAAM,CAACF,IAAA,EAAMmC,OAAO,CAAA,GAAIjC,QAAY,EAAA;EAC9B,MAAAmB,MAAA,GAASe,SAAU,CAAAhB,OAAA,CAAQC,MAAM,CAAA;EAIvChB,SAAA,CAAU,MAAM;IACd,IAAI,CAACkB,OAAS,EAAA;MACZ;IACF;IAEAW,UAAA,CAAW,IAAI,CAAA;IAEf,MAAM5B,UAAUrB,UAAW,EAAA;IACvB,IAAAoD,YAAA;IACJ/C,cAAA,CAAeF,WAAWkB,OAAS,EAAAf,KAAK,CACrC,CAAAK,IAAA,CAAM0C,IAAS,IAAA;MACd,IAAIA,IAAM,EAAA;QACR;MACF;MAGAC,OAAA,CAAQC,KAAK,2CAA2C,CAAA;MAClD,MAAA,IAAIZ,MAAM,2CAA2C,CAAA;IAAA,CAC5D,CACA,CAAAhC,IAAA,CAAK,MAAM6B,QAAA,CAASnB,OAAO,CAAC,CAAA,CAC5BV,IAAK,CAACqB,KAAU,IAAA;MACfoB,YAAA,GAAepB,MAAMwB,SAAU,CAAAtB,KAAA,EAAOE,MAAQ,EAAA,CAACb,KAAKkC,MAAW,KAAA;QAC7D,IAAIlC,GAAK,EAAA;UACPJ,QAAA,CAASI,GAAG,CAAA;QAAA,CACP,MAAA;UACL2B,OAAA,CAAQO,MAAM,CAAA;QAChB;MAAA,CACD,CAAA;IAAA,CACF,CACA,CAAAnC,KAAA,CAAOC,GAAA,IAAgBA,IAAIC,IAAS,KAAA,YAAA,GAAe,IAAO,GAAAL,QAAA,CAASI,GAAG,CAAE,CAAA,CACxEmC,QAAQ,MAAMT,UAAA,CAAW,KAAK,CAAC,CAAA;IAGlC,OAAO,MAAM;MACX,IAAIG,YAAc,EAAA;QAChBA,YAAA,CAAaO,WAAY,EAAA;MAC3B;MAEAtC,OAAA,CAAQtB,KAAM,EAAA;IAAA,CAChB;EAAA,CACF,EAAG,CAACyC,QAAU,EAAAN,KAAA,EAAOE,QAAQE,OAAS,EAAAnC,SAAA,EAAWG,KAAK,CAAC,CAAA;EAEhD,OAAA;IACLS,IAAM,EAAA,OAAOA,IAAS,KAAA,WAAA,GAAcsB,WAAc,GAAAtB,IAAA;IAClDU,OAAA;IACAP;EAAA,CACF;AACF;AAGO,SAASiC,UAAUf,MAAwB,EAAA;EAC1C,MAAAwB,iBAAA,GAAoBC,QAAQ,MAAMC,IAAA,CAAKC,UAAU3B,MAAM,CAAA,EAAG,CAACA,MAAM,CAAC,CAAA;EACjE,OAAAyB,OAAA,CAAQ,MAAMC,IAAK,CAAAE,KAAA,CAAMJ,iBAAiB,CAAG,EAAA,CAACA,iBAAiB,CAAC,CAAA;AACzE;"}